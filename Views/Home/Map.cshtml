@model IEnumerable<PARKIT_enterprise_final.Models.Listing>
@{
    ViewData["Title"] = "Map";
}

<div class="side-bar">
    @for (int i = 0; i < Model.Count(); i++)
    {
        <div class="listing">
@*          <img src="@Model.ElementAt(i).Image" /> *@
            <div class="">
                <span>@Model.ElementAt(i).Address.StreetAddress</span>
                <span>@Model.ElementAt(i).Address.City</span>
                <span>@Model.ElementAt(i).Address.ZipCode</span>
                <span>@Model.ElementAt(i).Price</span>
            </div>
        </div>
    }
</div>

<div id="map" class="map" />

<script>
    async function initMap() {
        // Get Google Maps API libraries
        const { Map, InfoWindow } = await google.maps.importLibrary("maps");
        const { AdvancedMarkerElement } = await google.maps.importLibrary("marker");

        // Create the map
        var map = new Map(document.getElementById('map'), {
            zoom: 12,
            center: { lat: 43.65804053299989, lng: -79.4349384105354 },
            mapId: 'ed84065a5ae2b96e',
            disableDefaultUI: true,
        });

        // Create the list of listings to be loaded onto the map
        const listings = [
            @for (int i = 0; i < Model.Count(); i++)
			{
				<text>
					{
                        id: "@Model.ElementAt(i).Id",
                        position: { lat: @Convert.ToDouble(Model.ElementAt(i).Address.Latitude), lng: @Convert.ToDouble(Model.ElementAt(i).Address.Longitude) },
					    title: "@Model.ElementAt(i).Address.StreetAddress",
					},
				</text>
			}
        ];

        // Create an info window to share between markers.
        const infoWindow = new InfoWindow();


        // Create the markers.
        listings.forEach((location, i) => {
            const parkingImg = document.createElement("img");
            // get from local images folder
            parkingImg.src = "/images/parking-icon.png";
            parkingImg.style.width = "40px";

            // Create a marker for each location.
            const marker = new AdvancedMarkerElement({
                position: location.position,
                map,
                content: parkingImg,
            });

            // Add a click listener for each marker, and set up the info window.
            marker.addListener("click", ({ domEvent, latLng }) => {
                const { target } = domEvent;

                infoWindow.close();
                window.location.href = "/Listing/ListingDetails/" + location.id;
            });
        });
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCJcxh-Z5LjR8UNl3BzyRrDmQap5rx-ZZA&callback=initMap" async defer></script>
